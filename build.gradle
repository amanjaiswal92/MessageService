buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: spring_boot_version
        classpath group: 'org.springframework.build.gradle', name: 'propdeps-plugin', version: '0.0.7'
        classpath group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '0.11'
        classpath group: 'com.moowork.gradle', name: 'gradle-grunt-plugin', version: '0.11'
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.6"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
    }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt'
defaultTasks 'bootRun'

bootRepackage {
    mainClass = 'com.ail.narad.Application'
}

springBoot {
    mainClass = 'com.ail.narad.Application'
    executable = true
}

bootRun {
    addResources = false
}

apply from: 'yeoman.gradle'
apply from: 'sonar.gradle'

apply from: 'liquibase.gradle'

apply from: 'gatling.gradle'
apply from: 'mapstruct.gradle'

if (project.hasProperty('prod')) {
    apply from: 'profile_prod.gradle'
} else if (project.hasProperty('fast')) {
    apply from: 'profile_fast.gradle'
} else if (project.hasProperty('qa')) {
    apply from: 'profile_qa.gradle'
} else {
    apply from: 'profile_dev.gradle'
}

group = 'com.ail.narad'
version = '0.0.1-SNAPSHOT'

description = ''

configurations {
    providedRuntime
}

/* downgrade Hibernate to 4.3 */
ext['hibernate.version'] = '${hibernate_entitymanager_version}'

repositories {
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'http://scrolls.ailiens.com:8081/repository/maven-releases' }
}

dependencies {

    compile "io.dropwizard.metrics:metrics-core"
    compile "io.dropwizard.metrics:metrics-annotation:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-ehcache:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-graphite:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-healthchecks:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-jvm:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-servlet:${dropwizard_metrics_version}"
    compile "io.dropwizard.metrics:metrics-json:${dropwizard_metrics_version}"
    compile ("io.dropwizard.metrics:metrics-servlets:${dropwizard_metrics_version}") {
        exclude(module: 'metrics-healthchecks')
    }
    compile("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}") {
        exclude(module: 'ch.qos.logback')
    }
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
    compile ("com.ryantenney.metrics:metrics-spring:${metrics_spring_version}") {
        exclude(module: 'metrics-core')
        exclude(module: 'metrics-healthchecks')
    }
    compile "org.hibernate:hibernate-core:${hibernate_entitymanager_version}"
    compile("com.zaxxer:HikariCP:${HikariCP_version}") {
        exclude(module: 'tools')
    }
    compile "commons-lang:commons-lang:${commons_lang_version}"
    compile "commons-io:commons-io:${commons_io_version}"
    compile "javax.inject:javax.inject:${javax_inject_version}"
    compile "javax.transaction:javax.transaction-api"
    compile "org.apache.geronimo.javamail:geronimo-javamail_1.4_mail:${geronimo_javamail_1_4_mail_version}"

    compile ("org.hibernate:hibernate-ehcache") {
        exclude(module: 'ehcache-core')
    }
    compile "org.hibernate:hibernate-envers"
    compile "org.hibernate:hibernate-validator"
    compile ("org.liquibase:liquibase-core:${liquibase_core_version}") {
        exclude(module: 'jetty-servlet')
    }
    compile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"
    compile "org.springframework.boot:spring-boot-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-loader-tools"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector"
    compile "org.springframework.cloud:spring-cloud-spring-service-connector"
    compile "org.springframework.cloud:spring-cloud-localconfig-connector"

    compile ("org.springframework:spring-context-support") {
        exclude(module: 'quartz')
    }
    compile "org.springframework.security:spring-security-config:${spring_security_version}"
    compile "org.springframework.security:spring-security-data:${spring_security_version}"
    compile "org.springframework.security:spring-security-web:${spring_security_version}"

    compile("io.springfox:springfox-swagger2:${springfox_version}"){
        exclude module: 'mapstruct'
    }

    compile "mysql:mysql-connector-java"
    compile "fr.ippon.spark.metrics:metrics-spark-reporter:${metrics_spark_reporter_version}"
    compile "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
    testCompile "com.jayway.awaitility:awaitility:${awaility_version}"
    testCompile "com.jayway.jsonpath:json-path"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.springframework.boot:spring-boot-test"
    testCompile "org.assertj:assertj-core:${assertj_core_version}"
    testCompile "junit:junit"
    testCompile "org.mockito:mockito-core"
    testCompile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"
    testCompile "org.hamcrest:hamcrest-library"

    testCompile "io.gatling.highcharts:gatling-charts-highcharts:${gatling_version}"

    testCompile "com.h2database:h2"
    optional "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"
    //jhipster-needle-gradle-dependency - JHipster will add additional dependencies here





    compile group: 'org.keycloak', name: 'keycloak-spring-security-adapter', version: '1.5.0.Final'
    compile 'com.ailiens.common:rabbitmq-publisher:0.0.+'
    provided 'org.projectlombok:lombok:1.16.10'
    apt 'org.projectlombok:lombok:1.16.10'


    compile("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}") {
        exclude(module: 'ch.qos.logback')
    }

    //narad

    compile group: 'com.hazelcast', name: 'hazelcast', version: hazelcast_version
    compile group: 'com.hazelcast', name: 'hazelcast-hibernate4', version: hazelcast_version
    compile group: 'com.hazelcast', name: 'hazelcast-spring', version: hazelcast_version
    compile group: 'com.hazelcast', name: 'hazelcast-wm', version: hazelcast_version
   // compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '1.4.0.RELEASE'
    compile group: 'com.sun.jersey', name: 'jersey-core', version: jersey_version
    compile group: 'com.sun.jersey', name: 'jersey-client', version: jersey_version
    compile group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: jersey_version

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch'
    compile 'com.google.code.gson:gson:2.5'
    compile group: 'com.sun.jna', name: 'jna', version: '3.0.9'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
}

compileJava.dependsOn(processResources)

clean {
    delete "target"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

task stage(dependsOn: 'bootRepackage') {
}

task copyDevProperties(type: Copy) {
    from 'src/main/resources/keycloak/keycloak-dev.json'
    into 'src/main/resources/'
    rename('keycloak-dev.json', 'keycloak.json')
}

task copyQAProperties(type: Copy) {
    from 'src/main/resources/keycloak/keycloak-qa.json'
    into 'src/main/resources/'
    rename('keycloak-qa.json', 'keycloak.json')
}

task copyProdProperties(type: Copy) {
    from 'src/main/resources/keycloak/keycloak-prod.json'
    into 'src/main/resources/'
    rename('keycloak-prod.json', 'keycloak.json')
}

task copyUIDevProperties(type: Copy) {
    from 'src/main/webapp/keycloak/keycloak-dev.json'
    into 'src/main/webapp/'
    rename('keycloak-dev.json', 'keycloak.json')
}

task copyUIQAProperties(type: Copy) {
    from 'src/main/webapp/keycloak/keycloak-qa.json'
    into 'src/main/webapp/'
    rename('keycloak-qa.json', 'keycloak.json')
}

task copyUIProdProperties(type: Copy) {
    from 'src/main/webapp/keycloak/keycloak-prod.json'
    into 'src/main/webapp/'
    rename('keycloak-prod.json', 'keycloak.json')
}

task copyQACertificate(type: Copy) {
    from 'src/main/resources/ebextensions/2-public-certificate.config'
    into 'src/main/resources/eb'
}

task doPack(type: War, dependsOn: []) {
    from('src/main/resources/eb')
        {
            into('.ebextensions')
        }
    archiveName "ROOT.war"
}
